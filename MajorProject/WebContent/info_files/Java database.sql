create database major_project_snake_n_ladder;

use major_project_snake_n_ladder;

desc java;
select * from java;
select count(*) from java;

create table Java (Id int(3) primary key, 
Stage varchar(1) not null,
Question varchar(500) not null,
Option_1 varchar(200) not null,
Option_2 varchar(200) not null,
Option_3 varchar(200) not null,
Option_4 varchar(200)not null,
Answer varchar(200) not null
);

-- ======================== Easy ========================

insert into Java values("1","E","Which of the following is a reserved keyword in Java?","object","strictfp","main","system","strictfp");
insert into Java values("2","E","In java, jar stands for___.","Java Archive Runner","Java Application Resource","Java Application Runner","None of the above","None of the above");
insert into Java values("3","E","What is the range of short data type in Java?","-128 to 127","-32768 to 32767","-2147483648 to 2147483647",
"None of the mentioned","-32768 to 32767");
insert into Java values
("4","E","What is the range of byte data type in Java?","-128 to 127","-32768 to 32767","-2147483648 to 2147483647",
"None of the mentioned","-128 to 127");
insert into Java values
("5","E","Which of the following can be operands of arithmetic operators?","Numeric","Boolean","Characters",
"Both Numeric & Characters","Both Numeric & Characters");

insert into Java values
("6","E","Which of the following is not OOPS concept in Java?"," Inheritance",
 "Encapsulation",
 "Polymorphism",
 "Compilation",
  "Compilation"
);


insert into Java values
("7","E","Which statement is true regarding an object?",
"An object is what classes instantiated are from",
"An object is an instance of a class",
"An object is a variable",
"An object is a reference to an attribute",
"An object is an instance of a class"
);

insert into Java values
("8","E","Who is known as father of Java Programming Language?",
"James Gosling",
"M. P Java",
"Charel Babbage",
"Blais Pascal",
"James Gosling"
);
insert into Java values
("9","E","Which provides runtime environment for java byte code to be executed?",
"JDK",
"JVM",
"JRE",
"JAVAC",
"JVM"
);
insert into Java values
("10","E","Which of the following are not Java keywords?",
"double",
"switch",
"then",
"instanceof",
"then"
);
insert into Java values
("11","E","Which of these have highest precedence?",
"()",
"++",
"*",
">>",
"()"
);
insert into Java values
("12","E","Java language was initially called as __",
"Sumatra",
"J++",
"Oak",
"Pine",
"Oak"
);
insert into Java values
("13","E","Which of these operators is used to allocate memory to array variable in Java?",
"alloc",
"malloc",
"new malloc",
"new",
"new"
);

insert into Java values
("14","E","Which of these is not a bitwise operator?",
"&",
"^ ",
"|",
"<=",
"<="
);
insert into Java values
("15","E","What is the full form of JVM ?",
"Java Very Large Machine",
"Java Verified Machine",
"Java Very Small Machine",
"Java Virtual Machine",
"Java Virtual Machine"
);
insert into Java values
("16","E","Which of the following are not Java modifiers?",
"public",
"private",
"friendly",
"transient",
"friendly"
);

insert into Java values
("17","E","What is byte code in Java?",
"Code generated by a Java compiler",
"Code generated by a Java Virtual Machine",
"Name of Java source code file",
"Block of code written inside a class",
"Code generated by a Java compiler"
);

insert into Java values
("18","E","_ is used to find and fix bugs in the Java programs.",
"JVM",
"JRE",
"JDK",
"JDB",
"JDB"
);

insert into Java values
("19","E","Which of the following is not a Java features?.",
"Dynamic",
"Architecture Neutral",
"Use of pointers",
"Object-oriented",
"Use of pointers"
);
insert into Java values
("20","E","Which keyword is used for accessing the features of a package?.",
"package",
"import",
"extends",
"export",
"import"
);
insert into Java values
("21","E","In java, jar stands for___.",
"Java ARchive",
"ava Application Resource",
"Java Application Runner",
"None of the above",
"Java ARchive"
);
insert into Java values
("22","E","What is the initial quantity of the ArrayList list?",
"5",
"10",
"0",
"100",
"10"
);
insert into Java values
("23","E","Decrement operator decreases the value of variable by what number?",
 "1",
"2",
"3",
"4",
"1"
);
insert into Java values
("24","E","Which of the following are non-primitive types?",
"byte",
"String",
"integer",
"Float",
"String"
);
insert into Java values
("25","E","Which of these is returned by Greater Than, Less Than and Equal To (i.e Relational) operator?",
"Float",
"Integer",
"Boolean",
"Double",
"Boolean"
);
insert into Java values
("26","E","What is an example of polymorphism?",
"Inner class",
"nonymous classes",
"Method overloading",
"Method overriding",
"Method overloading"
);
insert into Java values
("27","E","Which of the following is not a valid flow control statement?",
"exit()",
"break",
"continue",
"return",
"exit()"
);
insert into Java values
("28","E","What is the output of relational operators?",
"Integer",
"Boolean",
"Characters",
"Double",
"Boolean"
);
insert into Java values
("29","E","Which of these operators can skip evaluating right hand operand?",
"!",
"|",
"&",
"&&",
"&&");
insert into Java values
("30","E","Which of the following package stores all the simple data types in java?",
 "lang",
"java",
"util",
"java.packages",
 "lang");
 
insert into Java values
("31","E","Arrays in Java are implemented as?",
 "class",
 "object",
 "variable",
 "none of the mentioned",
 "object"
);

insert into Java values
("32","E"," Which of these cannot be declared static?",
 "class",
 "object",
 "variable",
 "method",
 "object"
);
insert into Java values
("33","E","How to sort an array?",
"Array.sort()",
"Arrays.sort()",
"Collection.sort()",
"System.sort()",
"Arrays.sort()"
);

insert into Java values
("34","E","Literal can be of which of these data types?",
"integer",
"float",
"boolean",
"all of the mentioned",
"all of the mentioned"
);

insert into Java values
("35","E","Which of these can not be used for a variable name in Java?",
"identifier",
"keyword",
"identifier & keyword",
"none of the mentioned",
 "keyword"
);

insert into Java values
("36","E","Which class does all the Enums extend?",
 "Object",
 "Enums",
   "Enum",
  "EnumClass",
  "Enum"
);
insert into Java values
("37","E","Which of the following keywords is used to declare exceptions that can possibly occur?",
 "handle",
"throws",
"checked",
"manage",
"throws"
);

insert into Java values
("38","E","Which one is true about a constructor ?",
"A constructor must have the same name as the class it is declared within.",
"A constructor is used to create objects.",
"A constructor may be declared private",
"All of the above",
"All of the above"

);

insert into Java values
("39","E","What is the output of the following program?
public class Question {
public static void main(String args[]) {
String s1 = abc;
String s2 = def;
String s3 = s1.concat(s2.toUpperCase( ) );
System.out.println(s1+s2+s3);
}
}?",
"abcdefabcdef",
"abcabcDEFDEF",
"abcdefabcDEF",
"None of the above",
"abcdefabcDEF"
);


-- ==================== Medium ====================

insert into Java values("40","M","Which of the following can be used to copy data from one array to another?","System.clone","Systemclone","System.arraycopy","java.lang.clone","System.arraycopy");
insert into Java values("41","M","Which of the following keywords is used to declare exceptions that can possibly occur?","handle","throws"," checked","manage","throws");
insert into Java values("42","M","In java control statements break, continue, return, try-catch-finally and assert belongs to?","Selection statements","Loop Statements"," Transfer statements","Pause Statement","Transfer statements");
insert into Java values("43","M","Which one is a template for creating different objects ?","An Array","A class","Interface","Method","A class");
insert into Java values("44","M","Which of these is returned by Greater Than, Less Than and Equal To (i.e Relational) operator ?","Fload","Integer","Boolean","Double","Boolean");
insert into Java values("45","M","Which statement transfer execution to different parts of your code based on the value of an expression?","If","Switch","Nested-if","if-else-if","Switch");
insert into Java values("46","M","Division operator has __ precedence over multiplication operator","Heighest","Least","Equal","None of These","Equal");
insert into Java values("47","M","Which of the following is illegal:","int i = 32;","float f = 45.0;","none","None of These","float f = 45.0;");
insert into Java values("48","M","Which of the following is not a core interface of Hibernate?","Configuration","Criteria","SessionManagement","Session","SessionManagement");
insert into Java values("49","M","How many JDBC driver types does Sun define?","one","Two","Three","four","Four");
insert into Java values("50","M","Which concept of Java is achieved by combining methods and attribute into a class?","Encapsulation","Inheritance"," Polymorphism","Abstraction","Encapsulation");
insert into Java values("51","M","How can we identify whether a compilation unit is class or interface from a .class file?"," Java source file header","Extension of compilation unit","We cannot differentiate between class and interface","The class or interface name should be postfixed with unit type"," Java source file header");
insert into Java values("52","M"," What is use of interpreter?","They convert bytecode to machine language code","They read high level code and execute them","They are intermediated between JIT and JVM","It is a synonym for JIT"," They read high level code and execute them");
insert into Java values("53","M","What would be the behaviour if this() and super() used in a method?","Runtime error"," Throws exception","compile time error"," Runs successfully","compile time error");
insert into Java values("54","M","What is true about protected constructor?","Protected constructor can be called directly"," Protected constructor can only be called using super()"," Protected constructor can be used outside package"," protected constructor can be instantiated even if child is in a different package","Protected constructor can only be called using super()");
insert into Java values("55","M","What is the process of defining a method in a subclass having same name & type signature as a method in its superclass?","Runtime error"," Throws exception","compile time error"," Runs successfully","compile time error");
insert into Java values("56","M","Which of these is supported by method overriding in Java?","Abstraction","Encapsulation","Polymorphism"," None of the mentioned","Polymorphism");
insert into Java values("57","M","Which of these method of class String is used to extract a single character from a String object?","CHARAT()","chatat()","charAt()","ChatAt() ","charAt()");
insert into Java values("58","M","Which of these class relies upon its subclasses for complete implementation of its methods?"," Object class"," abstract class","ArrayList class"," None of the mentioned","abstract class");
insert into Java values("59","M","Which of the following statements are incorrect?","String is a class","Strings in java are mutable","Every string is an object of class String"," Java defines a peer class of String, called StringBuffer, which allows string to be altered","Strings in java are mutable");
insert into Java values("60","M","Which operator is used by Java run time implementations to free the memory of an object when it is no longer needed?","delete"," free","new","none of the mentioned ","none of the mentioned");
insert into Java values("61","M"," A class member declared protected becomes a member of subclass of which type?","public member"," private member","protected member","static member ","private member");
insert into Java values("62","M","How to copy contents of array?","System.arrayCopy()","Array.copy()","Arrays.copy()"," Collection.copy()","System.arrayCopy()");
insert into Java values("63","M","An array elements are always stored in __ memory locations.","Sequential","Random","Sequential and Random"," Binary search","Sequential");
insert into Java values("64","M","Which of these is a process of writing the state of an object to a byte stream?","Serialization","Externalization","File Filtering","All of the mentioned "," Serialization");
insert into Java values("65","M","Which of these is method of ObjectOutput interface used to write the object to input or output stream as required?","write()","None","StreamWrite()"," writeObject()","writeObject()");
insert into Java values("66","M","Which of the following is advantage of using PreparedStatement in Java?"," Slow performance","Encourages SQL injection","Prevents SQL injection"," More memory usage","Prevents SQL injection");
insert into Java values("67","M","Which of the following is used to call stored procedure?"," Statement","PreparedStatement"," CallableStatment","CalledStatement ","CallableStatment");
insert into Java values("68","M"," How can we move from one desired step to another step?","breakpoints","System.out.println","logger.log","logger.error ","breakpoints");
insert into Java values("69","M","How constructor can be used for a servlet?"," Initialization","Constructor function","Initialization and Constructor function","  Setup() method","Initialization and Constructor function");
insert into Java values("70","M","The full set of operations allowed on a stack are","Push, pop","Push, pop, remove","Push, pop, add, remove","Push,pop,add,remove,substitute ","Push, pop");
insert into Java values("71","M","#define is used to","Define a variable","Define a macro","Define a function"," Define a constant","Define a macro");
insert into Java values("72","M","Which method of the Class.class is used to determine the name of a class represented by the class object as a String?","getClass()","intern()","getName()","toString() ","getName()");
insert into Java values("73","M","Which of the following is true about the anonymous inner class?","It has only methods","Objects can't be created","It has a fixed class name","It has no class name ","It has no class name");
insert into Java values("74","M","In which memory a String is stored, when we create a string using new operator?","Stack","String memory","Heap memory"," Random storage space","Heap memory");
insert into Java values("75","M","Which of the following is a mutable class in java?","java.lang.String","java.lang.Byte","java.lang.Short"," java.lang.StringBuilder","java.lang.StringBuilder");
insert into Java values("76","M","What is meant by the classes and objects that dependents on each other?","Tight Coupling","Cohesion","Loose Coupling","None of the above ","Tight Coupling");
insert into Java values("77","M","Which of the following modifiers can be used for a variable so that it can be accessed by any thread or a part of a program?","global","transient","volatile","default ","volatile");
insert into Java values("78","M","How many threads can be executed at a time?","Only one thread","Multiple threads","Only main (main() method) thread","Two threads ","Multiple threads");
insert into Java values("79","M","In character stream I/O, a single read/write operation performs _.","Two bytes read/write at a time.","Eight bytes read/write at a time.","One byte read/write at a time."," Five bytes read/ write at a time","Two bytes read/write at a time");
insert into Java values("80","M","Which of the following could be written with little knowledge of java?"," Java Server Pages","Java Servlets"," Common Gateway Interface","Java Community Program "," Java Server Pages");
insert into Java values("81","M","How constructor can be used for a servlet?","Initialization"," Constructor function"," Initialization and Constructor function"," Setup() method","Initialization and Constructor function");
insert into Java values("82","M","How is the dynamic interception of requests and responses to transform the information done?","servlet container"," servlet config","servlet context"," servlet filter","servlet filter");
insert into Java values("83","M","To prevent any method from overriding, we declare the method as-","static","const"," final"," abstract","final");
insert into Java values("84","M"," Which of the following is true?","A finally block is executed before the catch block but after the try block"," A finally block is executed, only after the catch block is executed"," A finally block is executed whether an exception is thrown or not"," A finally block is executed, only if an exception occurs","A finally block is executed whether an exception is thrown or not");
insert into Java values("85","M","Which of the following are not the methods of the Thread class?","yield()","sleep(long msec)","go()"," stop()","go()");
insert into Java values("86","M","What does the expression float a = 35 / 0 return?","0","Not a Number","Infinity","Run time exception ","Infinity");
insert into Java values("87","M","In which process, a local variable has the same name as one of the instance variables?","Serialization","Variable Shadowing","Abstraction"," Multi-threading","Variable Shadowing");
insert into Java values("88","M","Which is used to separate the hierarchy of the class while declaring an import statement?","Package"," Applet","Browser"," All of the above ","Package");
insert into Java values("89","M"," Which of the following is a member of the java.lang package?","List","Queue","Math","Stack ","Queue");


-- ==================== Hard ====================

insert into Java values("90","H"," public class Snippets {
    public static void main(String[] args) {
	   String[] arr = { 'A', 'B', 'C', 'D' };
        arr[0] = arr[1] + arr[2]; 
        arr[1] = arr[3] + arr[2];
		arr[3] = 'E'; 
        for (String s : arr) {
            System.out.print(s + ' ');     
        }
    
	}
}",
"BC DC C E",
"BC CD EC",
"BC",
"EC",
"BC DC C E"
);
insert into Java values("91","H","When destroy() method of a filter is called? ",
  "The destroy() method is called only once at the end of the life cycle of a filter",
 "The destroy() method is called after the filter has executed doFilter method",
"The destroy() method is called only once at the begining of the life cycle of a filter",
"The destroyer() method is called after the filter has executed",
"The destroy() method is called only once at the end of the life cycle of a filter"

);
insert into Java values("92","H","Which method is used to send the same request and response objects to another servlet in RequestDispacher?",
  "forward()",
"sendRedirect()",
"Both A & B",
"None of the above",
"forward()"
);

insert into Java values("93","H"," public class Snippets {
    int sum(int x,int p)
    {
      Inner C=new Inner(x,p);
        return(x+p);
    }
    static class Inner{
        Inner(int x,int p)
    {
        System.out.println('A'+(x+p));
    }
    }


    public static void main(String[] args) {
        Snippets p=new Snippets();
        System.out.println(p.sum(3,4));
    }
}",
"A7,7",
"7,A1",
"A2,8",
"4.3,4",
"A7,7"
);
insert into Java values("94","H","Which object is created by the web container at time of deploying the project?",
 "ServletConfig",
"ServletContext",
"Both A & B",
"None of the above",
"ServletContext"
);
insert into Java values("95","H","Which of the following are most common configuration methods of Hibernate Configuration",
"XML Configuration hibernate.cfg.xml",
"Mapping files and XML Configuration hibernate.cfg.xml",
" web.config",
" http.conf",
"Mapping files and XML Configuration hibernate.cfg.xml"
);
insert into Java values("96","H","class Snippets
{
	public static void main(String args[])  
	{ 

	

		int a=-5;
	      	int b=3; 
	      	int c=0; 
	      	int  d;
	     
	     	d = a++ | ++b   & c++;
	      
	      	System.out.println(a + ' '  + b +'  '+  c  +' ' +d);
}
}",
 "-3 2 1 -4",
"4 1 1 -3",
"-4 4  1 -5",
"-3 2 1 1 ",
"-3 2 1 1 "
);
insert into Java values("97","H","Which of the following is true about Query object in hibernate?",
 " Query objects Hibernate Query Language (HQL) string to retrieve data from the database and create objects.",

" Query objects SQL string to retrieve data from the database and create objects.",

" A Query instance is used to bind query parameters, limit the number of results returned by the query, and finally to execute the query.",

" All of the above.",
"All of the above."
);
insert into Java values("98","H","When a Transactional concurrency strategy is to be used?",
 "Use it for reference data only.",

" Use this strategy for read-mostly data where it is critical to prevent stale data in concurrent transactions.",

"Use this strategy if data hardly ever changes and a small likelihood of stale data is not of critical concern.",

" None of the above.",

 "Use this strategy for read-mostly data where it is critical to prevent stale data in concurrent transactions."
);
insert into Java values("99","H","Which of the following is not an advantage of Hibernate Criteria API?",
 "Allows to use aggregate functions",
"Cannot order the result set",
"Allows to fetch only selected columns of result",
 "Can add conditions while fetching results",
"Cannot order the result set"
);

insert into Java values("100","H","In case of Table per Concrete class, there will be three tables in the database having no relations to each other. 
Which are the ways to map the table?",
"By union-subclass element",
"By self-creating the table for each class",
"Both A & B",
"None of the above",
"Both A & B"
);
insert into Java values("101","H","class Snippets
{
	public static void main(String args[])  
	{ 
                    int x= 0; int y= 0;
		for (int z = 0; z < 5; z++)
		{
			if (( ++x > 2 ) && (++y > 2))
			{
				x++;
			}
		}
		System.out.println(x + " " + y);
		System.out.println((( ++x > 2 ) && (++y > 2)));
	}
}",
"3 6 ,false",
"2 4, true",
"true ,1 1",
"6 3,true",
"6 3,true"
);

insert into Java values("102","H"," Which of the following is FALSE about Session in hibernate?",
"Session is a light weight non-threadsafe object",
"You can share the session between threadscorrect",
"Session represents a single unit-of-work with the database
wrong",
"Session is the primary interface for the persistence service",
"You can share the session between threads"
);
insert into Java values("103","H","In this method, you can access the request XML element, whose type is org.dom4j.Element, and the response document, 
whose type is org.dom4j.Document, as method arguments.",
"invoke",
"invokeInterval",
"invokeInternal",
"none of the mentioned",
"invokeInternal"
);
insert into Java values("104","H","To implement endpoints with an XML marshalling technology, you have to extend the:-",
"AbstractMarshallingPayload",
"AbstractMarshalling",
 "AbstractMarshallingPayloadEndpoint",
"None of the mentioned",
"AbstractMarshallingPayloadEndpoint"
);

insert into Java values("105","H","Which advice is executed once a joint point finishes?",
 "@Before",
"@After",
"@AfterReturning",
" @AfterThrowing",
"@After"
);


insert into Java values("106","H","class Test {

    static int index = 0;

    public static void main(String args[]) {
        System.out.println(test());
    }

    static int test() {
        int index = 1;
        return index;
    }
}",
"0",
"0.1",
"1",
"none",
"1"
);

insert into Java values("107","H","Way to secure web app’s URL.",
"servlet filters",
"refresh-check-delay",
"http servlet filters",
"none of the mentioned",
"servlet filters"
);

insert into Java values("108","H","Attribute which specifies redirection URL on login error.",
"authentication-failure-url",
 "authentication-failure_login-url",
"authentication-login-url",
 "none of the mentioned",
"authentication-failure-url"
);


insert into Java values("109","H","class A10{

public static void main(String arg []){

		int x = 2;
             	int y = 0;
             for ( ; y < 10; ++y) 
             {
                 if (y % x == 0) 
                     continue;  
                 else if (y == 8)
                      break;
                 else
                    System.out.print(y + " ");
             }
}",
"1 3 5 7 9 ",
"3,5,7,9,1",
"3,1,5,6,1",
"1,2,4,9,7",
"1 3 5 7 9 "
);

insert into Java values("110","H","To access JSON in a Spring application, library used is:-",
"JSON-LIB",
"SpringJSON-lib",
"JSON-lib",
" None of the mentioned",
"SON-LIB"
);

insert into Java values("111","H","Class which is capable of performing a multitude of operations on REST services.",
"RestTemplate",
" XPathTemplate",
"XMLTemplate",
" JavaTemplate",
"RestTemplate"
);
insert into Java values("112","H","Class which is capable of performing a multitude of operations on REST services.",
"RestTemplate",
" XPathTemplate",
"XMLTemplate",
" JavaTemplate",
"RestTemplate"
);
insert into Java values("113","H","Sessionfactory can manage contextual sessions for you and allows you to retrieve them by the:-",
"getSession() method",
"getCurrent() method",
 "getCurrentSession() method",
 "none of the mentioned",
 "getCurrentSession() method"
);
insert into Java values("114","H","Which two interfaces does the javax.servlet.jsp package have?",
"JspPage",
 "HttpJspPage",
"JspWriter",
"Both A & B",
"Both A & B"
);
insert into Java values("115","H","Which can generate HTML dynamically on the client but can hardly interact with the web server to perform complex tasks like database access and image 
processing etc. in JSP?",
"vs.Static HTML",
 "vs.Server-Side Includes",
"vs.Pure Servlets",
"Vs.JavaScript",
"Vs.JavaScript"
);
insert into Java values("116","H","The method forward(request, response) will",
"return back to the same method from where the forward was invoked",
 "not return back to the same method from where the forward was invoked and the web pages navigation continues",
"Both A and B are correct",
" None of the above",
"return back to the same method from where the forward was invoked"
);
insert into Java values("117","H","What alternatives exist to embedding Java code directly within the HTML markup of your JSP page?",

 "Moving the code into your session manager.",
"Moving the code into scriptlets.wrong",
"Moving the code into JavaBeans and servlets.correct",
 "Moving the code into a transaction manager.",
"Moving the code into JavaBeans and servlets."
);
insert into Java values("118","H","The _ specification defines an application programming interface for communication between the server and the application program",

"Java Servlet",
	"JDBC",
	"Java Applet",
	"Java Swing",
	"Java Servlet"
);

insert into Java values("119","H","How many jsp implicit objects are there and these objects are created by the web container that are available to all the jsp pages?",
" 9",
"10",
"7",
"8",
"9"
);
insert into Java values("120","H","Which tag should be used to pass information from JSP to included JSP?",
" Using <%jsp:page> tag",
"Using <%jsp:param> tag",
"Using <%jsp:import> tag",
" Using <%jsp:useBean> tag",
"Using <%jsp:page> tag"
);